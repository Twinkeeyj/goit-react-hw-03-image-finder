{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","services/dataApi.js","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["Searchbar","state","term","handleChenge","e","setState","target","value","handleSubmit","event","preventDefault","props","onSubmit","this","className","type","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","newModal","openModal","largeImageURL","onClick","src","ImageGallery","data","map","webformatURL","id","Button","handleClick","fetchDataWithQuery","query","page","key","axios","get","then","response","hits","propTypes","PropTypes","string","isRequired","number","Loaders","color","height","width","timeout","text","React","Modal","modal","code","nodeName","modalClose","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","alt","App","loading","error","fetchData","DataApi","length","prevState","catch","finally","handleSearch","queryOn","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0a98b8e9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nexport default class Searchbar extends Component {\n  static propTypes={\n    onSubmit: PropTypes.func.isRequired,\n  }\n  state = {\n    term: '',\n  };\n\n  handleChenge = e => {\n    this.setState({ term: e.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.term);\n\n  };\n\n  render() {\n    const { term } = this.state;\n    return (\n      <div>\n        <header className=\"Searchbar\">\n          <form\n            className=\"SearchForm\"\n            onSubmit={this.handleSubmit}\n          >\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              name=\"term\"\n              value={term}\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              onChange={this.handleChenge}\n            />\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nexport default class ImageGalleryItem extends Component {\n  static propTypes={\nonClick: PropTypes.func\n  }\n\n  newModal=(e)=>{\n   this.props.openModal(this.props.largeImageURL)\n  }\n  render(){\n return(\n <>\n<li  className=\"ImageGalleryItem\" onClick={this.newModal}>\n  <img key={this.props.largeImageURL} src={this.props.src}  className=\"ImageGalleryItem-image\"  />\n</li>\n</>\n)\n }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\"\n\nfunction ImageGallery({data, openModal}){\n\nreturn(\n <div>\n      <ul className=\"ImageGallery\">\n  {  data.map(e=> <ImageGalleryItem openModal={openModal} key={e.id} src={e.webformatURL} largeImageURL={e.largeImageURL}/>\n    )}\n\n  </ul>\n </div>\n)\n}\nexport default ImageGallery;\nImageGallery.propTypes={\n  data: PropTypes.array.isRequired,\n  openModal: PropTypes.func.isRequired,\n}\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nfunction Button({ handleClick }) {\n  return (\n    <>\n      <button type=\"button\" onClick={handleClick} className=\"Button\">\n        more\n      </button>\n    </>\n  );\n}\nexport default Button;\n\n// Button.propTypes={\n//   onClick: PropTypes.func.isRequired,\n// }\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst fetchDataWithQuery=(query, page,key)=>{\r\n  return axios\r\n  .get(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  )\r\n  .then(response => response.data.hits)\r\n\r\n}\r\nexport default{\r\n  fetchDataWithQuery,\r\n}\r\nfetchDataWithQuery.propTypes={\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  key: PropTypes.string.isRequired\r\n}","import Loader from 'react-loader-spinner';\nimport React from 'react';\n\nexport default class Loaders extends React.Component {\n  render() {\n    return (\n      <>\n      <Loader\n        type=\"Bars\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n      <h1>{this.props.text}</h1>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n  static propTypes={\n    modal:PropTypes.func,\n    largeImageURL: PropTypes.string.isRequired,\n  }\n  modal = e => {\n\n    if (e.code === 'Escape' || e.target.nodeName !==\"IMG\") {\n      this.props. modalClose();\n      // console.dir(e.target);\n    }\n  };\n\n  componentDidMount = () => {\n    window.addEventListener('keydown', this.modal);\n    window.addEventListener('click', this.modal);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('keydown', this.modal);\n    window.removeEventListener('click', this.modal);\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\">\n      <div className=\"Modal\">\n        <img src={this.props.largeImageURL} alt=\"\" />\n      </div>\n    </div>\n    );\n  }\n}","import React, { Component } from 'react';\r\n\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Button from './components/Button/Button';\r\nimport DataApi from './services/dataApi';\r\nimport Loaders from './components/Loader/Loader';\r\nimport Modal from './components/Modal/Modal';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n    query: '',\r\n    page: 1,\r\n    key: '18953404-219a87b5236596fa40acd8a55',\r\n    largeImageURL: null,\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.query;\r\n    const nextQuery = this.state.query;\r\n    if (prevQuery !== nextQuery) {\r\n      this.fetchData();\r\n    }\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  fetchData = () => {\r\n    // if(this.state.data.length <1){\r\n    //   this.setState({error: true})\r\n    // }\r\n\r\n    this.setState({ loading: true });\r\n    const { query, page, key } = this.state;\r\n\r\n    DataApi.fetchDataWithQuery(query, page, key)\r\n\r\n      .then(data => {\r\n        if (data.length < 1) {\r\n          this.setState({ error: true });\r\n        } else {\r\n          this.setState(prevState => ({\r\n            data: [...prevState.data, ...data],\r\n            page: prevState.page + 1,\r\n            error: false,\r\n          }));\r\n        }\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n  handleSearch = queryOn => {\r\n    this.setState({\r\n      data: [],\r\n    });\r\n    this.setState({\r\n      query: queryOn,\r\n    });\r\n  };\r\n  openModal = largeImageURL => {\r\n    this.setState({\r\n      largeImageURL: largeImageURL,\r\n    });\r\n  };\r\n\r\n  modalClose = () => {\r\n    this.setState(prevState => ({ largeImageURL: !prevState.largeImageURL }));\r\n  };\r\n\r\n  render() {\r\n    const { data, loading, error, largeImageURL } = this.state;\r\n    return (\r\n      <div>\r\n        <Searchbar onSubmit={this.handleSearch} />\r\n        {error && <Loaders text=\"ERRoR\" />}\r\n        {loading ? (\r\n          <Loaders text=\"Loading...\" />\r\n        ) : (\r\n          <ImageGallery openModal={this.openModal} data={data} />\r\n        )}\r\n        {data.length > 0 && <Button handleClick={this.fetchData} />}\r\n        {largeImageURL && (\r\n          <Modal\r\n            onSubmit={this.openModal}\r\n            largeImageURL={largeImageURL}\r\n            modalClose={this.modalClose}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}